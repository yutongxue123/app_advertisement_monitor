{"name": "新建案首页左侧焦点广告", "status": "failed", "statusDetails": {"message": "AssertionError: expression is not True, message:", "trace": "self = <test_cases.test_build_home_page.TestBuildHomePage object at 0x00000209FA6EB2E0>\nimg_url = 'https://newhouse.591.com.tw/133245'\n\n    @allure.title('新建案首页左侧焦点广告')\n    @pytest.mark.parametrize('img_url', get_advertisement_img(region_id, 91))\n    def test_focus_advertisement(self, img_url):\n        \"\"\"\n        判断新建案首页焦点左侧轮播图是否可以点击\n        \"\"\"\n        # 判断轮播图是否存在,且可以点击,并进入广告详情页\n        assert_true(self.build_homepage.image_wait_and_click(img_url, self.build_homepage.file_path, threshold=0.5, img_url=False))\n        # 判断广告详情页是否存在\n>       assert_true(self.build_homepage.is_detail_page_exist())\n\ntest_cases\\test_build_home_page.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\python\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpr = False, msg = '', snapshot = True\n\n    @logwrap\n    def assert_true(expr, msg=\"\", snapshot=True):  # noqa\n        \"\"\"\n        Assert expression is True ( bool(expr) is True )\n        Note that this is equivalent to bool(expr) is True and not to expr is True (use assertIs(expr, True) for the latter).\n    \n        :Example:\n    \n            >>> assert_true(1==1, msg=\"assert 1==1\")\n        \"\"\"\n>       assert bool(expr), \"expression is not True, message: %s\" % msg\nE       AssertionError: expression is not True, message:\n\nE:\\python\\lib\\site-packages\\airtest\\core\\assertions.py:100: AssertionError"}, "description": "\n        判断新建案首页焦点左侧轮播图是否可以点击\n        ", "attachments": [{"name": "log", "source": "b49f37dd-d944-46b3-af4a-155b3eb863f5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "img_url", "value": "'https://newhouse.591.com.tw/133245'"}], "start": 1704886018543, "stop": 1704886040865, "uuid": "34821f35-d62e-49b6-a70a-aacc4fda78e7", "historyId": "58391262ccf3d21745401ec2bf94552c", "testCaseId": "d226823bf50e278f761502890e5233eb", "fullName": "test_cases.test_build_home_page.TestBuildHomePage#test_focus_advertisement", "labels": [{"name": "epic", "value": "APP广告监控"}, {"name": "feature", "value": "新建案首页"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_setup2')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_build_home_page"}, {"name": "subSuite", "value": "TestBuildHomePage"}, {"name": "host", "value": "D012022050333"}, {"name": "thread", "value": "20388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_build_home_page"}]}