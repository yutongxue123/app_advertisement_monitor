{"uid":"69b7d27e0dfdfe31","name":"新建案详情页推荐广告","fullName":"test_cases.test_build_detail_page.TestBuiDetailPage#test_recommend_build_detail_page","historyId":"954c3e864572afb7bc89609115e2e22e","time":{"start":1704885799657,"stop":1704885850973,"duration":51316},"description":"\n        测试新建案详情页推荐楼盘是否可以点击\n        ","descriptionHtml":"<pre><code>    测试新建案详情页推荐楼盘是否可以点击\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: expression is not True, message:","statusTrace":"self = <test_cases.test_build_detail_page.TestBuiDetailPage object at 0x00000209FA6F53A0>\n\n    @allure.title('新建案详情页推荐广告')\n    def test_recommend_build_detail_page(self):\n        \"\"\"\n        测试新建案详情页推荐楼盘是否可以点击\n        \"\"\"\n        # 进入新建案搜索页\n        self.build_searchpage.into_search_page()\n        # 输入建案名称,并点击搜索\n        self.build_searchpage.input_content_search(self.build_hid[1])\n        # 进入详情页\n        self.build_homepage.image_exist_and_click(self.build_hid[2], self.build_detailpage.file_path)\n        # 判断推荐建案是否存在\n        sleep(2)\n        self.build_detailpage.swipe_up()\n        self.build_detailpage.clear_login_pop_up()\n        self.build_detailpage.img_wait_click(self.build_detailpage.surrounding_img)\n        self.build_detailpage.swipe_up()\n>       assert_true(self.build_detailpage.image_wait_and_click(self.recommend_build_img, self.build_detailpage.file_path))\n\ntest_cases\\test_build_detail_page.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\python\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpr = False, msg = '', snapshot = True\n\n    @logwrap\n    def assert_true(expr, msg=\"\", snapshot=True):  # noqa\n        \"\"\"\n        Assert expression is True ( bool(expr) is True )\n        Note that this is equivalent to bool(expr) is True and not to expr is True (use assertIs(expr, True) for the latter).\n    \n        :Example:\n    \n            >>> assert_true(1==1, msg=\"assert 1==1\")\n        \"\"\"\n>       assert bool(expr), \"expression is not True, message: %s\" % msg\nE       AssertionError: expression is not True, message:\n\nE:\\python\\lib\\site-packages\\airtest\\core\\assertions.py:100: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestBuiDetailPage","time":{"start":1704885753609,"stop":1704885798266,"duration":44657},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"init_setup","time":{"start":1704885798266,"stop":1704885799344,"duration":1078},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestBuiDetailPage","time":{"start":1704885799344,"stop":1704885799516,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"init_setup2","time":{"start":1704885799516,"stop":1704885799657,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"\n        测试新建案详情页推荐楼盘是否可以点击\n        ","status":"failed","statusMessage":"AssertionError: expression is not True, message:","statusTrace":"self = <test_cases.test_build_detail_page.TestBuiDetailPage object at 0x00000209FA6F53A0>\n\n    @allure.title('新建案详情页推荐广告')\n    def test_recommend_build_detail_page(self):\n        \"\"\"\n        测试新建案详情页推荐楼盘是否可以点击\n        \"\"\"\n        # 进入新建案搜索页\n        self.build_searchpage.into_search_page()\n        # 输入建案名称,并点击搜索\n        self.build_searchpage.input_content_search(self.build_hid[1])\n        # 进入详情页\n        self.build_homepage.image_exist_and_click(self.build_hid[2], self.build_detailpage.file_path)\n        # 判断推荐建案是否存在\n        sleep(2)\n        self.build_detailpage.swipe_up()\n        self.build_detailpage.clear_login_pop_up()\n        self.build_detailpage.img_wait_click(self.build_detailpage.surrounding_img)\n        self.build_detailpage.swipe_up()\n>       assert_true(self.build_detailpage.image_wait_and_click(self.recommend_build_img, self.build_detailpage.file_path))\n\ntest_cases\\test_build_detail_page.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\python\\lib\\site-packages\\airtest\\utils\\logwraper.py:124: in wrapper\n    res = f(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpr = False, msg = '', snapshot = True\n\n    @logwrap\n    def assert_true(expr, msg=\"\", snapshot=True):  # noqa\n        \"\"\"\n        Assert expression is True ( bool(expr) is True )\n        Note that this is equivalent to bool(expr) is True and not to expr is True (use assertIs(expr, True) for the latter).\n    \n        :Example:\n    \n            >>> assert_true(1==1, msg=\"assert 1==1\")\n        \"\"\"\n>       assert bool(expr), \"expression is not True, message: %s\" % msg\nE       AssertionError: expression is not True, message:\n\nE:\\python\\lib\\site-packages\\airtest\\core\\assertions.py:100: AssertionError","steps":[],"attachments":[{"uid":"63e23e05baf837d9","name":"log","source":"63e23e05baf837d9.txt","type":"text/plain","size":46143}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestBuiDetailPage::0","time":{"start":1704885851098,"stop":1704885851630,"duration":532},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"_xunit_setup_class_fixture_TestBuiDetailPage::0","time":{"start":1704885868793,"stop":1704885868793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"新建案详情页"},{"name":"epic","value":"APP广告监控"},{"name":"tag","value":"@pytest.mark.usefixtures('init_setup2')"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_build_detail_page"},{"name":"subSuite","value":"TestBuiDetailPage"},{"name":"host","value":"D012022050333"},{"name":"thread","value":"20388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_build_detail_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_setup2')"]},"source":"69b7d27e0dfdfe31.json","parameterValues":[]}